1-
the output will be as alert(3) thre times after with 1s & 1.1s & 1.2s delay and its becouse the function will executed only 
after the loop and at that time the "i"value will be "3"

2-1 //the easy one and good working 
function addSix(n) {
    return n + 6;    
}
addSix(10)

2-2 //the long and also working one
function addSix(n) {
    return function CreateBase(num){
        return n+num
    }
}
var add = addSix(6)
add(10)

3-
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
</head>
<body>
	
<button id="btn-0">Button 1!</button>
<button id="btn-1">Button 2!</button>
<button id="btn-2">Button 3!</button>

<script type="text/javascript">
    var prizes = ['A Unicorn!', 'A Hug!', 'Fresh Laundry!'];
    for (var btnNum = 0; btnNum < prizes.length; btnNum++) {
        document.getElementById('btn-' + btnNum).onclick = function(BtnNum){
            return function() {
                alert(prizes[BtnNum]);
            };
        }(btnNum);
    }
</script>	
</body>
</html>

4-1
calculateSum(2, 6,function(sum){console.log(sum)});

4-2
$.getJSON('http://myapi.com',function(results){
showResults(results);});

4-3
calculateSum(2, 6,function(sum){if (sum > 8) {
    console.log('larger than 8');
}});

4-4
$.getJSON('http://myapi.com',function(data){data.map(function (x) { return x * 8; })});

5-
$.getJSON("https://reqres.in/api/users?delay=3",function(data){
console.log(data);});

$.getJSON("https://reqres.in/api/users/2", function(data){

console.log(data);});

console.log("hello")  
